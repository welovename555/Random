‚ú≥Ô∏è ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡∏â‡∏•‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô

üìå ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°:
	‚Ä¢	‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏Ç‡πÑ‡∏ó‡∏¢‡πÉ‡∏ô‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà
	‚Ä¢	‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÄ‡∏•‡∏Ç‡πÑ‡∏ó‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞ ‚Äú‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå‚Äù ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
	‚Ä¢	‡∏Ç‡∏¢‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°‡∏Ç‡∏≠‡∏á ‚Äú‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‚Äù ‡πÅ‡∏•‡∏∞ ‚Äú‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‚Äù
	‚Ä¢	‡πÄ‡∏û‡∏¥‡πà‡∏° label ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏° ‡πÅ‡∏•‡∏∞‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å emoji ‡∏ó‡∏∏‡∏Å‡∏ä‡∏ô‡∏¥‡∏î

üîß ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:

2.1 ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç LABEL ‡πÉ‡∏´‡πâ‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô

const Labels = {
  house: ['‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà', '‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà', '‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡πâ‡∏≤‡∏ô', '‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà', 'No.', '#', 'House No.', 'HN', ''],
  phone: ['‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå', 'Tel', '‡πÇ‡∏ó‡∏£', '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£', '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå', '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå', '‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠', '‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö', '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠', '‡πÄ‡∏ö‡∏≠‡∏£‡πå', '‡πÇ‡∏ó‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠', ''],
  soi: ['‡∏ã‡∏≠‡∏¢', '‡∏ã.', 'Soi', 'Alley', '‡∏ñ‡∏ô‡∏ô‡∏¢‡πà‡∏≠‡∏¢', ''],
  village: ['‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô', '‡∏°.', '‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà', '‡∏´‡∏°‡∏π‡πà', 'Village', 'Vlg.', ''],
  road: ['‡∏ñ‡∏ô‡∏ô', '‡∏ñ.', 'Road', 'Rd.', 'Street', 'Str.', ''],
  subdistrict: ['‡∏ï‡∏≥‡∏ö‡∏•', '‡∏ï.', 'Tambon', 'Subdistrict', ''],
  district: ['‡∏≠‡∏≥‡πÄ‡∏†‡∏≠', '‡∏≠.', 'District', 'Amphoe', ''],
  province: ['‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î', '‡∏à.', 'Province', 'Prov.', ''],
  postal: ['‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå', '‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå‡∏ó‡∏µ‡πà', '‡∏£‡∏´‡∏±‡∏™', 'Zip Code', 'Postcode', 'Postal Code', '']
};

2.2 ‡∏õ‡∏£‡∏±‡∏ö formatPhone() ‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏Ç‡πÑ‡∏ó‡∏¢ ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà

formatPhone: (phone) => {
  const formats = [
    phone,
    phone.replace(/(\d{3})(\d{3})(\d{4})/, '$1-$2-$3'),
    phone.replace(/(\d{3})(\d{3})(\d{4})/, '$1/$2/$3'),
    phone.replace(/(\d{3})(\d{3})(\d{4})/, '$1.$2.$3'),
    phone.replace(/(\d{3})(\d{3})(\d{4})/, '$1 $2 $3'),
    phone.replace(/(\d{3})(\d{3})(\d{4})/, '$1_$2_$3'),
    phone.replace(/(\d{3})(\d{3})(\d{4})/, '($1)$2$3'),
    phone.replace(/(\d{3})(\d{3})(\d{4})/, '($1) $2-$3'),
    phone.replace(/(\d{3})(\d{3})(\d{4})/, '$1‚Ä¢$2‚Ä¢$3'),
    phone.replace(/(\d{3})(\d{3})(\d{4})/, '$1‚Äì$2‚Äì$3'),
    '+66 ' + phone.slice(1, 3) + ' ' + phone.slice(3, 6) + ' ' + phone.slice(6),
    '+66-' + phone.slice(1, 4) + '-' + phone.slice(4, 7) + '-' + phone.slice(7),
    '+66.' + phone.slice(1, 4) + '.' + phone.slice(4, 7) + '.' + phone.slice(7),
    '0 ' + phone.split('').join(' '),
    phone.slice(0, 6) + '.' + phone.slice(6),
    phone.slice(0, 5) + ' ' + phone.slice(5),
    phone.slice(0, 5) + '.' + phone.slice(5, 7) + '.' + phone.slice(7),
  ];
  return formats[Math.floor(Math.random() * formats.length)];
}

 2.3 ‡∏õ‡∏£‡∏±‡∏ö formatNumber() ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà ‚Üí ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏Ç‡πÑ‡∏ó‡∏¢ ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà

formatNumber: (num) => {
  const formats = [
    num,
    num.replace('/', ' / '),
    num.replace('/', '-'),
    num.replace('/', ' - '),
    num.replace('/', '.'),
    num.replace('/', './'),
    num.replace('/', '//'),
    num.replace('/', '._.'),
    num.replace('/', ' . '),
    num.replace('/', '._/'),
    num.replace('/', '_'),
    num.replace('/', '|'),
    num.replace('/', ' | '),
    num.replace('/', '/.'),
    num.replace('/', '. / '),
    `(${num})`,
    `[${num}]`,
    `No.${num}`,
    `HN: ${num}`,
    num.split('').join(' '),        // 2 2 / 4
    num.replace('/', '/.') + '..',  // 22./4..
  ];
  return formats[Math.floor(Math.random() * formats.length)];
}

2.4 ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏Ç‡πÑ‡∏ó‡∏¢: ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏±‡∏ö postalCode ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô

‡πÉ‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô generateRandomAddress():

// ‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ postalCode ‡πÉ‡∏´‡πâ‡∏™‡∏∏‡πà‡∏°‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏Ç‡πÑ‡∏ó‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
const useThaiPostal = Math.random() < 0.5;
const postal = useThaiPostal
  ? ObfuscationUtils.toThaiNumerals(selectedAddress.postalCode)
  : selectedAddress.postalCode;

‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ä‡πâ postal ‡πÅ‡∏ó‡∏ô‡πÉ‡∏ô components list:

{ type: 'postal', value: postal, labelPool: Labels.postal }

‚úÖ ‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏ä‡πâ toThaiNumerals() ‡∏Å‡∏±‡∏ö‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏≠‡∏∑‡πà‡∏ô

‚∏ª

‚úÖ ‡∏™‡∏¥‡πà‡∏á‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:
	‚Ä¢	‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ CORE_ADDRESS ‡πÅ‡∏•‡∏∞ CORE_PHONE
	‚Ä¢	‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏Ç‡πÑ‡∏ó‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏à‡∏∏‡∏î
	‚Ä¢	‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡πà‡∏°‡πÅ‡∏ö‡∏ö‡∏°‡∏µ‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÉ‡∏´‡∏°‡πà ‡πÜ
	‚Ä¢	‡πÄ‡∏û‡∏¥‡πà‡∏° Label ‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏à‡∏£‡∏¥‡∏á‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô
	‚Ä¢	‡∏£‡∏∞‡∏ö‡∏ö‡∏¢‡∏±‡∏á‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏∏‡πà‡∏°‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î + ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏£‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏∞‡∏î‡∏±‡∏ö